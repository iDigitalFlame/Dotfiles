#!/usr/bin/python3
################################
### iDigitalFlame  2016-2021 ###
#                              #
#            -/`               #
#            -yy-   :/`        #
#         ./-shho`:so`         #
#    .:- /syhhhh//hhs` `-`     #
#   :ys-:shhhhhhshhhh.:o- `    #
#   /yhsoshhhhhhhhhhhyho`:/.   #
#   `:yhyshhhhhhhhhhhhhh+hd:   #
#     :yssyhhhhhyhhhhhhhhdd:   #
#    .:.oyshhhyyyhhhhhhddd:    #
#    :o+hhhhhyssyhhdddmmd-     #
#     .+yhhhhyssshdmmddo.      #
#       `///yyysshd++`         #
#                              #
########## SPACEPORT ###########
################################
## Firefox Recent URLs Lister
#
# Copyright (C) 2016 - 2021 iDigitalFlame
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

from re import search
from os import remove
from shutil import copy2
from sqlite3 import connect
from tempfile import mkstemp
from sys import exit, stderr, argv
from os.path import expandvars, join
from configparser import ConfigParser, Error as ConfigError


def _db():
    c = ConfigParser()
    d = expandvars("$HOME/.config/librewolf")
    p = join(d, "profiles.ini")
    try:
        c.read(p)
    except (ConfigError, OSError) as err:
        raise OSError(
            f'Could not read profiles config file "{p}": {err}'
        )
    if "Profile0" not in c:
        raise OSError(
            f'Could not find "Profile0" in profiles config file "{p}"'
        )
    if "Path" not in c["Profile0"]:
        raise OSError(
            f'Could not find "Profile0\\Path" in profiles config file "{p}"'
        )
    del p
    x = join(d, c["Profile0"]["Path"], "places.sqlite")
    del c
    del d
    t = mkstemp()[1]
    copy2(x, t)
    del x
    return t


def find(pattern, string):
    if "moz-extension" in string:
        return None
    return search(pattern, string) is not None


def _recent(db, terminal):
    d = connect(db)
    d.create_function("REGEXP", 2, find)
    c = d.cursor()
    c.execute(
        "SELECT DISTINCT RTRIM(url,'/'), title FROM moz_places WHERE url REGEXP '^(.*):\\/\\/' "
        "ORDER BY moz_places.visit_count DESC"
    )
    for r in c.fetchall():
        if r[1] is None:
            print(str(r[0].encode(), "ascii", "ignore"))
            continue
        t = str(r[1].encode(), "ascii", "ignore")
        if len(t) > 100:
            t = t[:100] + "..."
        if terminal:
            print(f'{t} ({str(r[0].encode(), "ascii", "ignore")})')
        else:
            print(f'{t:<250} ({str(r[0].encode(), "ascii", "ignore")})')
        del t
    c.close()
    d.close()
    del c
    del d


if __name__ == "__main__":
    try:
        d = _db()
    except Exception as err:
        print(f"Error: {err}", file=stderr)
        exit(1)

    try:
        _recent(d, len(argv) == 1)
    except Exception as err:
        print(f"Error: {err}", file=stderr)
        exit(1)
    finally:
        try:
            remove(d)
        except OSError:
            pass
    exit(0)
