#!/usr/bin/python3
################################
###### iDigitalFlame 2020 ######
#                              #
#            -/`               #
#            -yy-   :/`        #
#         ./-shho`:so`         #
#    .:- /syhhhh//hhs` `-`     #
#   :ys-:shhhhhhshhhh.:o- `    #
#   /yhsoshhhhhhhhhhhyho`:/.   #
#   `:yhyshhhhhhhhhhhhhh+hd:   #
#     :yssyhhhhhyhhhhhhhhdd:   #
#    .:.oyshhhyyyhhhhhhddd:    #
#    :o+hhhhhyssyhhdddmmd-     #
#     .+yhhhhyssshdmmddo.      #
#       `///yyysshd++`         #
#                              #
########## SPACEPORT ###########
################################
## Firefox Recent URLs Lister
#
# Copyright (C) 2020 iDigitalFlame
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

from re import search
from os import remove
from io import StringIO
from shutil import copy2
from sqlite3 import connect
from tempfile import mkstemp
from sys import exit, stderr, argv
from os.path import expandvars, join
from configparser import ConfigParser, Error as ConfigError

FIREFOX_DATA = "$HOME/.mozilla/firefox"


def get_db():
    cfg = ConfigParser()
    directory = expandvars(FIREFOX_DATA)
    profiles = join(directory, "profiles.ini")
    try:
        cfg.read(profiles)
    except (ConfigError, OSError) as err:
        raise OSError(
            'Could not read profiles config file "%s": %s' % (profiles, str(err))
        )
    if "Profile0" not in cfg:
        raise OSError(
            'Could not find "Profile0" in profiles config file "%s"' % profiles
        )
    if "Path" not in cfg["Profile0"]:
        raise OSError(
            'Could not find "Profile0\\Path" in profiles config file "%s"' % profiles
        )
    del profiles
    db = join(directory, cfg["Profile0"]["Path"], "places.sqlite")
    del cfg
    del directory
    temp = mkstemp()[1]
    copy2(db, temp)
    return temp


def find(pattern, string):
    if "moz-extension" in string:
        return None
    return search(pattern, string) is not None


def get_recent(db, terminal):
    d = connect(db)
    d.create_function("REGEXP", 2, find)
    c = d.cursor()
    c.execute(
        "SELECT DISTINCT RTRIM(url,'/'), title FROM moz_places WHERE url REGEXP '^(.*):\/\/' "
        "ORDER BY moz_places.visit_count DESC"
    )
    f = "%s (%s)"
    if not terminal:
        f = "%-250s (%s)"
    w = StringIO()
    for r in c.fetchall():
        if r[1] is None:
            w.write("%s\n" % str(r[0].encode(), "ascii", "ignore"))
            continue
        w.write(
            "%s\n"
            % (
                f
                % (
                    str(r[1].encode(), "ascii", "ignore"),
                    str(r[0].encode(), "ascii", "ignore"),
                )
            )
        )
    c.close()
    d.close()
    del c
    del d
    r = w.getvalue()
    del w
    return r


if __name__ == "__main__":
    try:
        db = get_db()
        print(get_recent(db, len(argv) == 1))
    except Exception as err:
        print("An error occurred: %s" % str(err), file=stderr)
        exit(1)
    finally:
        try:
            remove(db)
        except OSError:
            pass
    exit(0)
