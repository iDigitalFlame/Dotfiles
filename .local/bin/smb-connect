#!/usr/bin/bash
# Copyright (C) 2020 iDigitalFlame
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
################################
###### iDigitalFlame 2020 ######
#                              #
#            -/`               #
#            -yy-   :/`        #
#         ./-shho`:so`         #
#    .:- /syhhhh//hhs` `-`     #
#   :ys-:shhhhhhshhhh.:o- `    #
#   /yhsoshhhhhhhhhhhyho`:/.   #
#   `:yhyshhhhhhhhhhhhhh+hd:   #
#     :yssyhhhhhyhhhhhhhhdd:   #
#    .:.oyshhhyyyhhhhhhddd:    #
#    :o+hhhhhyssyhhdddmmd-     #
#     .+yhhhhyssshdmmddo.      #
#       `///yyysshd++`         #
#                              #
########## SPACEPORT ###########
################################
## SMB Connecter

if [ $# -lt 2 ] || [ $# -gt 3 ]; then
    printf "smb [--reset] <domain\\\user|user> <share>\n"
    exit 1
fi

sanatized_username=$(echo $1 | sed -e 's/\\/-/g' | sed -e 's/@/-/g')

if [ $# -eq 3 ] && [ "$1" == "--reset" ]; then
    printf "" | gnome-keyring-query set smb-$sanatized_username
    1=$2
    2=$3
else
    if [ $# -eq 3 ]; then
        printf "smb [--reset] <domain\\\user|user> <share>\n"
        exit 1
    fi
fi

user="$1"
share="$2"
domain=""

if [ ! -z "$(echo $user | grep '\\')" ]; then
    domain=$(echo $user | awk -F'\' '{print $1}')
    user=$(echo $user | awk -F'\' '{print $2}')
else
    if [ ! -z "$(echo $user | grep '@')" ]; then
        domain=$(echo $user | awk -F'@' '{print $1}')
        user=$(echo $user | awk -F'@' '{print $2}')
    fi
fi

folder=$(echo "$share" | awk -F'/' '{print $NF}')
server=$(echo "$share" | awk -F'/' '{print $3}')

if [ ! -z "$(mount | grep $folder | grep $server)" ]; then
    printf "Share \"$folder\" on \"$server\" seems to already be mounted!\n"
    exit 1
fi

set_password=0
password=$(gnome-keyring-query get smb-$sanatized_username 2> /dev/null)
while [ -z "$password" ]; do
    set_password=1
    printf "Password for $1: "
    read -s password
    printf "\n"
done

if [ $set_password -eq 1 ]; then
    printf "$password" | gnome-keyring-query set smb-$sanatized_username
fi
printf "domain $domain, user $user, pass $password"



mkdir -p "/tmp/.mounts/$USER/$server-folder" 2> /dev/null
if [ $? -ne 0 ]; then
    printf "Could not creating mouting folder \"/tmp/.mounts/$USER/$server-folder\"!\n"
    exit 1
fi


printf "$user\n$domain\n$password\n" | sudo /opt/spaceport/sbin/smb-mount "$server/$folder" "$smbmnt"

echo "$folder, $server"

exit 1

if [ $# -eq 3 ];then
    printf "" | gnome-keyring-query set smb-connect-$smbwkrg-$smbusr
    smbpwd=""
else
    smbpwd=$(gnome-keyring-query get smb-connect-$smbwkrg-$smbusr)
fi
while [ -z "$smbpwd" ]; do
    printf "Password: "
    read -s smbpwd
done
if [ -z "$smbpwd" ]; then
    printf "A password is required!\n"
    exit 1
fi
printf "$smbpwd" | gnome-keyring-query set smb-connect-$smbwkrg-$smbusr
smbmnt="/tmp/.mounts/$USER/smb-$(echo $smbfldr | sed -e 's/\$//g')"
if [ ! -z "$(mount | grep $smbmnt)" ]; then
    printf "\"$smbmnt\" is already mounted!\n"
    exit 1
fi
if [ ! -d "$smbmnt" ]; then
    mkdir -p "$smbmnt"
fi
sudo /opt/spaceport/sbin/smb-mount "$smbshare" "$smbmnt" "vers=3.0,username=\"$smbusr\",domain=\"$smbdom\",workgroup=\"$smbwkrg\",password=\"$smbpwd\",uid=$USER,gid=$USER,file_mode=0750,dir_mode=0750"
if [ $? -ne 0 ]; then
    printf "There was a problem mounting \"$smbshare\"!\n"
else
    printf "\"$smbshare\" mounted to \"$smbmnt\"\n"
fi
smbpwd=""
smbdom=""
smbusr=""
unset smbpwd
unset smbdom
unset smbusr
exit 0
